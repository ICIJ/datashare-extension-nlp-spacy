name: Publish release assets

on:
  push:
    tags:
      - '*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GH release
        run: gh release create "$tag" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}

  publish-docker-worker:
    needs: [ create-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: icij/datashare-spacy-worker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spacy worker
        uses: docker/build-push-action@v6
        with:
          target: worker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-docker-worker-transformers:
    needs: [ create-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: icij/datashare-spacy-worker-transformers

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spacy worker with transformers
        uses: docker/build-push-action@v6
        with:
          target: worker-transformers
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-pyinstaller-worker:
    needs: [ create-release ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest' ]
    steps:
      - name: Set up env vars
        run: |
          echo "_BUILD_OS=${RUNNER_OS,,}">>${GITHUB_ENV}
          echo "_BUILD_OS=${RUNNER_OS,,}">>${GITHUB_ENV}
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install poetry
        run: poetry install
      # TODO: version the artifact
      - name: Build project binary
        run: |
          poetry shell
          PYTHONHASHSEED=42 PYTHONOPTIMIZE=1 pyinstaller datashare_spacy_worker/__main__.py \
            --distpath ./bin \
            -F \
            -y \
            --name datashare-spacy-worker \
            --specpath ./bin \
            --add-data ../data/models.json:datashare_spacy_worker/data/ \
            -p datashare_spacy_worker
      - uses: actions/upload-artifact@v4
        with:
          name: 'datashare-spacy-worker-${{ env._BUILD_OS }}-${{env.GITHUB_REF_NAME}}'
          path: './bin/datashare-spacy-worker'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
