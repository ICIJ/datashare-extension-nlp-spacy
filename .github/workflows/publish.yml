name: Publish release assets

on:
  push:
    tags:
      - '*'

env:
  PYTHONHASHSEED: 42
  PYTHONOPTIMIZE: 1

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GH release
        run: gh release create "$tag" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}

  publish-docker-worker:
    needs: [ create-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: icij/datashare-spacy-worker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spacy worker
        uses: docker/build-push-action@v6
        with:
          target: worker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-docker-worker-transformers:
    if: false
    needs: [ create-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: icij/datashare-spacy-worker-transformers

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spacy worker with transformers
        uses: docker/build-push-action@v6
        with:
          target: worker-transformers
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-pyinstaller-worker:
    needs: [ create-release ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Install Bash 4 and GNU sed on Mac
        if: runner.os == 'macOS'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update
          brew install bash
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Set up env vars
        shell: bash
        run: |
          build_os="${RUNNER_OS,,}"
          if [[ $build_os == "macos" ]]; then
            arch=
            if [ $(uname -m) = "arm64" ]; then arch="aarch64"; else arch="x86_64"; fi
            bin_suffix="-$build_os-$arch-$tag"
          else
            bin_suffix="-$build_os-$tag"
          fi
          echo "BIN_SUFFIX=$bin_suffix">>${GITHUB_ENV}
          echo "BUILD_OS=$build_os">>${GITHUB_ENV}
          echo Build os suffix: $bin_suffix
        env:
          tag: ${{ github.ref_name }}
          

      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install poetry and pyinstaller
        run: poetry install && poetry run python -m pip install pyinstaller==6.11.1

      - name: Build project binary
        shell: bash
        run: |
          poetry run pyinstaller datashare_spacy_worker/__main__.py \
            --distpath ./bin \
            -F \
            -y \
            --name "datashare-spacy-worker$BIN_SUFFIX" \
            --specpath ./bin \
            --add-data ../datashare_spacy_worker/data/models.json:datashare_spacy_worker/data/ \
            -p datashare_spacy_worker
          if [[ $BUILD_OS == "windows" ]]; then
            mv "./bin/datashare-spacy-worker$BIN_SUFFIX.exe" "./bin/datashare-spacy-worker$BIN_SUFFIX"
          fi

      - name: Push executable to GH release
        shell: bash
        run: gh release upload "$tag" "./bin/datashare-spacy-worker$BIN_SUFFIX"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
